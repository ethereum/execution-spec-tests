[build-system]
requires = ["setuptools>=61.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ethereum-execution-spec-tests"
version = "1.0.0"
description = "Ethereum execution client test authoring framework"
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
keywords = ["ethereum", "testing", "blockchain"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "click>=8.1.0,<9",
    "ethereum @ git+https://github.com/ethereum/execution-specs",
    "hive.py @ git+https://github.com/marioevz/hive.py",
    "ethereum-spec-evm-resolver @ git+https://github.com/petertdavies/ethereum-spec-evm-resolver",
    "setuptools",
    "types-setuptools",
    "gitpython>=3.1.31,<4",
    "PyJWT>=2.3.0,<3",
    "tenacity>8.2.0,<9",
    "bidict>=0.23,<1",
    "requests>=2.31.0,<3",
    "requests_unixsocket2>=0.4.0",
    "colorlog>=6.7.0,<7",
    "pytest>7.3.2,<8",
    "pytest-custom-report>=1.0.1,<2",
    "pytest-html>=4.1.0,<5",
    "pytest-metadata>=3,<4",
    "pytest-xdist>=3.3.1,<4",
    "coincurve>=20.0.0,<21",
    "trie>=2.0.2,<3",
    "semver>=3.0.1,<4",
    "pydantic>=2.9.0,<3",
    "rich>=13.7.0,<14",
    "solc-select>=1.0.4,<2",
    "filelock>=3.15.1,<4",
    "ethereum-types>=0.2.1,<0.3",
    "pyyaml>=6.0.2,<7",
    "types-pyyaml>=6.0.12.20240917,<7",
    "pytest-json-report>=1.5.0,<2",
    # TODO: bump questionary to a newer release, when it becomes available. 
    # The current release questionary 2.0.1 requires `prompt_toolkit = ">=2.0,<=3.0.36"`.
    # This conflicts with ipython; while not an EEST dependency, ipython a very useful tool:
    # https://ethereum.github.io/execution-spec-tests/main/dev/interactive_usage/
    "questionary @ git+https://github.com/tmbo/questionary@ff22aeae1cd9c1c734f14329934e349bec7873bc",
    "prompt_toolkit>=3.0.48,<4",  # ensure we have a new enough version for ipython
]

[project.urls]
Homepage = "https://github.com/ethereum/execution-spec-tests"
Documentation = "https://ethereum.github.io/execution-spec-tests"
Repository = "https://github.com/ethereum/execution-spec-tests"
Issues = "https://github.com/ethereum/execution-spec-tests/issues"
Changelog = "https://ethereum.github.io/execution-spec-tests/main/CHANGELOG/"


[project.optional-dependencies]
test = ["pytest-cov>=4.1.0,<5"]
lint = [
    "isort>=5.8,<6",
    "mypy==0.991; implementation_name == 'cpython'",
    "types-requests",
    "black==22.3.0; implementation_name == 'cpython'",
    "flake8-spellcheck>=0.24,<0.25",
    "flake8-docstrings>=1.6,<2",
    "flake8>=6.1.0,<7",
    "pep8-naming==0.13.3",
    "fname8>=0.0.3",
]
docs = [
    "cairosvg>=2.7.0,<3",
    "mike>=1.1.2,<2",
    "mkdocs>=1.4.3,<2",
    "mkdocs-click>=0.8,<1",
    "mkdocs-gen-files>=0.5.0,<1",
    "mkdocs-git-authors-plugin>=0.7.1,<1",
    "mkdocs-glightbox>=0.3.4,<1",
    "mkdocs-literate-nav>=0.6.0,<1",
    "mkdocs-material>=9.1.14,<10",
    "mkdocs-material-extensions>=1.1.1,<2",
    "mkdocstrings>=0.21.2,<1",
    "mkdocstrings-python>=1.0.0,<2",
    "pillow>=10.0.1,<11",
    "pyspelling>=2.8.2,<3",
]

[project.scripts]
fill = "cli.pytest_commands.fill:fill"
phil = "cli.pytest_commands.fill:phil"
execute = "cli.pytest_commands.execute:execute"
attac = "cli.pytest_commands.execute:execute"
tf = "cli.pytest_commands.fill:tf"
checkfixtures = "cli.check_fixtures:check_fixtures"
consume = "cli.pytest_commands.consume:consume"
protec = "cli.pytest_commands.consume:consume"
genindex = "cli.gen_index:generate_fixtures_index_cli"
gentest = "cli.gentest:generate"
eofwrap = "cli.eofwrap:eof_wrap"
pyspelling_soft_fail = "cli.tox_helpers:pyspelling"
markdownlintcli2_soft_fail = "cli.tox_helpers:markdownlint"
order_fixtures = "cli.order_fixtures:order_fixtures"
evm_bytes = "cli.evm_bytes:evm_bytes"
hasher = "cli.hasher:main"
eest = "cli.eest.cli:eest"

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["*tests*"]

[tool.setuptools.package-data]
ethereum_test_forks = ["forks/contracts/*.bin"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 99

[tool.black]
line-length = 99
target-version = ["py310"]

[tool.mypy]
mypy_path = ["src", "$MYPY_CONFIG_FILE_DIR/stubs"]
plugins = ["pydantic.mypy"]
