[tox]
env_list =
    framework
    tests
    docs

[forks]
develop = Prague
eip7692 = Osaka

[testenv]
runner = uv-venv-lock-runner
package = wheel
wheel_build_env = .pkg

[testenv:framework]
description = Run checks on helper libraries and test framework

setenv =
    # Only use EELS_RESOLUTIONS_FILE if it is set in the environment (eg, in CI)
    EELS_RESOLUTIONS_FILE = {env:EELS_RESOLUTIONS_FILE:}

extras =
    test
    lint

src = src

commands_pre = solc-select use 0.8.24 --always-install

commands =
    ruff check {[testenv:framework]src} --no-fix --show-fixes
    ruff format {[testenv:framework]src} --diff
    mypy {[testenv:framework]src}
    pytest -c ./pytest-framework.ini -n auto -m "not run_in_serial"
    pytest -c ./pytest-framework.ini -m run_in_serial

[testenv:py3]
description = An alias for the 'framework' tox environment
deps = {[testenv:framework]deps}
extras = {[testenv:framework]extras}
allowlist_externals = {[testenv:framework]allowlist_externals}
commands = {[testenv:framework]commands}

[testenv:tests-base]
extras =
    test
    lint

commands =
    ruff check tests --no-fix --show-fixes
    ruff format tests --diff
    mypy tests

[testenv:tests]
description = Execute test cases in tests/

extras =
    {[testenv:tests-base]extras}

commands =
    {[testenv:tests-base]commands}
    pytest -n auto -k "not slow"

[testenv:tests-develop]
description = Execute test cases in tests/, including tests for development forks

extras =
    {[testenv:tests-base]extras}

commands =
    pytest -n auto --until={[forks]develop}  -k "not slow"

[testenv:tests-eip7692]
description = Execute test cases in tests/, including tests for EIP-7692 (EOF)

extras =
    {[testenv:tests-base]extras}

commands =
    pytest -n auto --evm-bin=evmone-t8n --fork={[forks]eip7692}  -k "not slow" ./tests/osaka

[testenv:docs]
description = Run documentation checks

extras =
    lint
    docs

setenv =
    SPEC_TESTS_AUTO_GENERATE_FILES = true
    GEN_TEST_DOC_VERSION = "tox"
    # Required for `cairosvg` so tox can find `libcairo-2`.
    # https://squidfunk.github.io/mkdocs-material/plugins/requirements/image-processing/?h=cairo#cairo-library-was-not-found
    DYLD_FALLBACK_LIBRARY_PATH = /opt/homebrew/lib

src = docs/gen_test_case_reference.py

commands =
    ruff check {[testenv:docs]src} --no-fix --show-fixes
    ruff format {[testenv:docs]src} --diff
    mypy {[testenv:docs]src}
    python -c "import src.cli.tox_helpers; src.cli.tox_helpers.pyspelling()"
    python -c "import src.cli.tox_helpers; src.cli.tox_helpers.markdownlint()"
    mkdocs build --strict
