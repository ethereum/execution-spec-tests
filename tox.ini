[tox]
# Get a description of all available environments with `uvx --with=tox-uv tox -av`
env_list =
    lint
    typecheck
    spellcheck
    markdownlint
    framework
    tests
    mkdocs

[testenv]
runner = uv-venv-lock-runner
package = wheel
wheel_build_env = .pkg
solc_version = 0.8.24

[testenv:lint]
description = Lint and code formatting checks (ruff)
extras = lint
commands =
    ruff check --no-fix --show-fixes
    ruff format --diff

[testenv:typecheck]
description = Run type checking (mypy)
extras = lint
commands = mypy src tests docs

[testenv:spellcheck]
description = Spellcheck documentation (pyspelling)
extras = docs
commands = python -c "import src.cli.tox_helpers; src.cli.tox_helpers.pyspelling()"

[testenv:markdownlint]
description = Lint markdown files (markdownlint)
extras = docs
commands = python -c "import src.cli.tox_helpers; src.cli.tox_helpers.markdownlint()"

[testenv:mkdocs]
description = Build documentation in strict mode (mkdocs)
extras = docs
setenv =
    SPEC_TESTS_AUTO_GENERATE_FILES = true
    GEN_TEST_DOC_VERSION = "tox"
    # Required for `cairosvg` so tox can find `libcairo-2`.
    # https://squidfunk.github.io/mkdocs-material/plugins/requirements/image-processing/?h=cairo#cairo-library-was-not-found
    DYLD_FALLBACK_LIBRARY_PATH = /opt/homebrew/lib
commands = mkdocs build --strict

[testenv:framework]
description = Run library and framework unit tests (pytest)
setenv =
    # Use custom EELS_RESOLUTIONS_FILE if it is set via the environment (eg, in CI)
    EELS_RESOLUTIONS_FILE = {env:EELS_RESOLUTIONS_FILE:}
extras = test
commands_pre = solc-select use {[testenv]solc_version} --always-install
commands =
    pytest -c ./pytest-framework.ini -n auto -m "not run_in_serial"
    pytest -c ./pytest-framework.ini -m run_in_serial


[forks]
develop = Prague
eip7692 = Osaka

[testenv:tests]
description = Fill test cases in ./tests/ for deployed mainnet forks.
commands_pre = solc-select use 0.8.24 --always-install
commands = pytest -n auto -k "not slow"

[testenv:tests-develop]
description = Fill test cases in ./tests/ for deployed and development mainnet forks
commands_pre = solc-select use 0.8.24 --always-install
commands = pytest -n auto --until={[forks]develop} -k "not slow"

[testenv:tests-eip7692]
description = Fill test cases in ./tests/ for EIP-7692 (EOF) on Osaka
commands_pre = solc-select use 0.8.24 --always-install
commands =  pytest -n auto --evm-bin=evmone-t8n --fork={[forks]eip7692} -k "not slow" ./tests/osaka
